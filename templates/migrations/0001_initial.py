# Generated by Django 5.0.2 on 2025-08-21 06:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('budgets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('template_type', models.CharField(choices=[('student', 'Student Budget'), ('family', 'Family Budget'), ('travel', 'Travel Budget'), ('emergency', 'Emergency Fund'), ('business', 'Business Budget'), ('retirement', 'Retirement Budget'), ('wedding', 'Wedding Budget'), ('home_renovation', 'Home Renovation'), ('custom', 'Custom Template')], default='custom', max_length=30)),
                ('budget_period', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Period')], default='monthly', max_length=20)),
                ('is_default', models.BooleanField(default=False, help_text='Is this a system default template?')),
                ('is_public', models.BooleanField(default=False, help_text='Can other users see this template?')),
                ('is_featured', models.BooleanField(default=False, help_text='Is this template featured?')),
                ('image', models.ImageField(blank=True, null=True, upload_to='template_images/')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_template_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Budget Template',
                'verbose_name_plural': 'Budget Templates',
                'ordering': ['-is_default', '-rating', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('category_description', models.TextField(blank=True)),
                ('category_color', models.CharField(default='#3b82f6', max_length=7)),
                ('category_icon', models.CharField(blank=True, max_length=50)),
                ('allocation_percentage', models.DecimalField(decimal_places=2, help_text='Percentage of total budget allocated to this category', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('category_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('savings', 'Savings')], default='expense', max_length=20)),
                ('priority', models.IntegerField(default=1, help_text='Priority order for this category')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or tips')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='templates.budgettemplate')),
            ],
            options={
                'verbose_name': 'Template Category',
                'verbose_name_plural': 'Template Categories',
                'ordering': ['template', 'priority', 'allocation_percentage'],
            },
        ),
        migrations.CreateModel(
            name='TemplateReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField()),
                ('is_verified_user', models.BooleanField(default=False)),
                ('is_helpful', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='templates.budgettemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Review',
                'verbose_name_plural': 'Template Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TemplateUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('success_rating', models.IntegerField(blank=True, help_text='How successful was this template for the user?', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('budget_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_source', to='budgets.budget')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_records', to='templates.budgettemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_usage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Usage',
                'verbose_name_plural': 'Template Usage',
                'ordering': ['-used_at'],
            },
        ),
        migrations.AddIndex(
            model_name='budgettemplate',
            index=models.Index(fields=['template_type', 'is_public'], name='templates_b_templat_41503a_idx'),
        ),
        migrations.AddIndex(
            model_name='budgettemplate',
            index=models.Index(fields=['is_featured', 'rating'], name='templates_b_is_feat_74ea30_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='templatecategory',
            unique_together={('template', 'category_name')},
        ),
        migrations.AlterUniqueTogether(
            name='templatereview',
            unique_together={('template', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='templateusage',
            unique_together={('template', 'user', 'used_at')},
        ),
    ]
